[{"D:\\EDUCATION\\React\\Library\\library\\src\\index.js":"1","D:\\EDUCATION\\React\\Library\\library\\src\\reportWebVitals.js":"2","D:\\EDUCATION\\React\\Library\\library\\src\\App.js":"3","D:\\EDUCATION\\React\\Library\\library\\src\\Test.js":"4"},{"size":539,"mtime":1621416673000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1621416673000,"results":"7","hashOfConfig":"6"},{"size":2696,"mtime":1621416673000,"results":"8","hashOfConfig":"6"},{"size":6058,"mtime":1621416673000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1s5b5ae",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"D:\\EDUCATION\\React\\Library\\library\\src\\index.js",["21"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyComponent from './App';\nimport Album from './Test';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Album />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","D:\\EDUCATION\\React\\Library\\library\\src\\reportWebVitals.js",[],"D:\\EDUCATION\\React\\Library\\library\\src\\App.js",["22","23","24"],"import React from 'react';\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n  Button\n} from \"react-bootstrap\";\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      searchKey: \"\"\n    };\n    this.updateInput = this.updateInput.bind(this);\n    this.searchBooks = this.searchBooks.bind(this);\n  }\n\n  updateInput(e) {\n    this.setState({ searchKey: e.target.value });\n  }\n\n  searchBooks() {\n\n    this.setState({\n      isLoaded: true\n    });\n\n    let baseUrl = \"http://openlibrary.org/search.json?q=\"\n    let key = this.state.searchKey.trim().replace(\"  \", \" \").replace(\" \", \"+\")\n\n    fetch(baseUrl+key)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.docs\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n\n    if (!isLoaded) {\n      return (\n        <Container>\n          <Row>\n            <Col sm={6}>\n              <label>\n                <input type=\"text\" name=\"\" placeholder=\"Search books here\" onChange={ this.updateInput } />\n              </label>\n              <Button variant=\"primary\" onClick = { this.searchBooks }>Search</Button>\n            </Col>\n          </Row>\n        </Container>\n      )\n    } else {\n      return (\n        <Container>\n          \n          <Row>\n            <Col sm={6}>\n              <label>\n                <input type=\"text\" name=\"\" placeholder=\"Search books here\" onChange={ this.updateInput } />\n              </label>\n              <Button variant=\"primary\" onClick = { this.searchBooks }>Search</Button>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-md-center\">\n            \n            {this.state.items.map(item => (\n              <div key={item.key}>\n                <Col sm={3}>\n                  <Card style={{ width: '18rem' }}>\n                    <Card.Img variant=\"top\" src={ \"http://covers.openlibrary.org/b/id/\"+item.cover_i+\"-M.jpg\"} />\n                    <Card.Body>\n                      <Card.Title>{ item.title }</Card.Title>\n                      <Card.Text>Author: { item.author_name }</Card.Text>\n                      <Card.Text>Published Date: { item.publish_date != undefined && item.publish_date[0] }</Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              </div>\n            ))}\n\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default MyComponent;","D:\\EDUCATION\\React\\Library\\library\\src\\Test.js",["25","26","27","28","29","30","31","32","33","34","35","36"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport {\n  LinearProgress,\n  Button,\n  TextField,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n  Toolbar,\n  Typography,\n  styles,\n  Link,\n  Container,\n  makeStyles,\n  CssBaseline,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport LocalLibrary from '@material-ui/icons/LocalLibrary';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '100%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  hidden: {\n    display:'none',\n  }\n}));\n\nexport default function Album() {\n  \n  const classes = useStyles();\n  const [searchKey, setValue] = useState('');\n  const [isLoaded, updateLoad] = useState(false);\n  const [items, loadItems] = useState([]);\n  const [sortItem, setSortItem] = useState(\"\");\n  const [error, loadError] = useState(\"\");\n  const [errorClass, setErrClass] = useState(\"\");\n  const [errorMsg, setErrMsg] = useState(\"\");\n  const [viewStatus, setViewStatus] = useState(false);\n\n  async function searchBooks(searchKey) {\n\n    if(searchKey != \"\") {\n\n      setViewStatus(true);\n\n      let baseUrl = \"http://openlibrary.org/search.json?q=\"\n      let key = searchKey.trim().replace(\"  \", \" \").replace(/ /g, \"+\")\n\n      await fetch(baseUrl+key)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            loadItems(result.docs);\n            setViewStatus(false);\n          },\n          (error) => {\n            loadError(error);\n          }\n        )\n      } else {\n        setErrClass(\"error\");\n        setErrMsg(\"Required Field\");\n      }\n  }\n\n  function handleChange(event) {\n    setSortItem(event.target.value);\n    let index = event.target.value;\n    const sorted = items.sort((a, b) => (a[index] > b[index]) ? 1 : -1);\n    loadItems(sorted);\n  }\n\n  return (\n\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <LocalLibrary className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Library\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"searchKey\"\n                name=\"searchKey\"\n                label=\"Search Here\"\n                fullWidth\n                autoComplete=\"given-name\"\n                onChange={e => setValue(e.target.value)}\n                helperText={ errorMsg }\n              />\n            </Grid>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\" onClick={() => searchBooks(searchKey)}>\n                    Search\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n\n        <LinearProgress className={ viewStatus ? \"\" : classes.hidden } />\n\n        <Container>\n          <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"baseline\">\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"sortItem\">Sort By</InputLabel>\n              <Select\n                labelId=\"sortItem\"\n                id=\"sortItem\"\n                value={sortItem}\n                onChange={handleChange}\n              >\n                <MenuItem value=\"title\">Title</MenuItem>\n                <MenuItem value=\"publish_year\">Published Year</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Container>        \n\n        { items.length > 0 ?\n        <Container className={classes.cardGrid, !viewStatus ? \"\" : classes.hidden } maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {items.map((card) => (\n              <Grid item key={card.key} xs={12} sm={6} md={3}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={card.cover_i != undefined ? \"http://covers.openlibrary.org/b/id/\"+ card.cover_i +\"-M.jpg\" : \n                    \"https://ngmintlsubs.nationalgeographic.com/Solo/Content/Images/noCover.gif\"}\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                      { card.title }\n                    </Typography>\n                    <Typography>\n                      Author: { card.author_name }\n                    </Typography>\n                    <Typography>\n                      Published Date: { card.publish_date != undefined && card.publish_date[0] }\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      : \n      <Container className={classes.cardGrid, !viewStatus ? \"\" : classes.hidden } maxWidth=\"md\">\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n          No Details Found\n          </Grid>\n      </Container>\n      }\n\n      </main>\n    </React.Fragment>\n  );\n}",{"ruleId":"37","severity":1,"message":"38","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":19},{"ruleId":"37","severity":1,"message":"41","line":55,"column":13,"nodeType":"39","messageId":"40","endLine":55,"endColumn":18},{"ruleId":"37","severity":1,"message":"42","line":55,"column":30,"nodeType":"39","messageId":"40","endLine":55,"endColumn":35},{"ruleId":"43","severity":1,"message":"44","line":93,"column":70,"nodeType":"45","messageId":"46","endLine":93,"endColumn":72},{"ruleId":"37","severity":1,"message":"47","line":8,"column":3,"nodeType":"39","messageId":"40","endLine":8,"endColumn":14},{"ruleId":"37","severity":1,"message":"48","line":14,"column":3,"nodeType":"39","messageId":"40","endLine":14,"endColumn":9},{"ruleId":"37","severity":1,"message":"49","line":15,"column":3,"nodeType":"39","messageId":"40","endLine":15,"endColumn":7},{"ruleId":"37","severity":1,"message":"50","line":73,"column":10,"nodeType":"39","messageId":"40","endLine":73,"endColumn":18},{"ruleId":"37","severity":1,"message":"51","line":73,"column":20,"nodeType":"39","messageId":"40","endLine":73,"endColumn":30},{"ruleId":"37","severity":1,"message":"41","line":76,"column":10,"nodeType":"39","messageId":"40","endLine":76,"endColumn":15},{"ruleId":"37","severity":1,"message":"52","line":77,"column":10,"nodeType":"39","messageId":"40","endLine":77,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":83,"column":18,"nodeType":"45","messageId":"46","endLine":83,"endColumn":20},{"ruleId":"53","severity":1,"message":"54","line":174,"column":47,"nodeType":"55","messageId":"56","endLine":174,"endColumn":48},{"ruleId":"43","severity":1,"message":"44","line":182,"column":41,"nodeType":"45","messageId":"46","endLine":182,"endColumn":43},{"ruleId":"43","severity":1,"message":"44","line":194,"column":59,"nodeType":"45","messageId":"46","endLine":194,"endColumn":61},{"ruleId":"53","severity":1,"message":"54","line":203,"column":45,"nodeType":"55","messageId":"56","endLine":203,"endColumn":46},"no-unused-vars","'MyComponent' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'items' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'CardActions' is defined but never used.","'styles' is defined but never used.","'Link' is defined but never used.","'isLoaded' is assigned a value but never used.","'updateLoad' is assigned a value but never used.","'errorClass' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression"]